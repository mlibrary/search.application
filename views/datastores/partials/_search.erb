<%
  require 'yaml'
  data = YAML.load_file("config/search_options.yaml")
  # Filter the data
  search_options = data.map do |group|
    filtered_options = group['options'].select do |option|
      option['datastores'].include?(current_datastore)
    end
    { 'group' => group['group'], 'options' => filtered_options } unless filtered_options.empty?
  end.compact
  optgroups = search_options.length > 1
  tips = []
  # Set selected option on load
  query_param = params[:query]
  # Default option
  query = search_options.first['options'].first['value']
  # Check if the query param is not nil, does not contain the operators ` AND `, ` OR `, ` NOT `, and contains `:(`
  if query_param && ['AND', 'OR', 'NOT'].none? { |operator| query_param.include?(' ' + operator + ' ') } && query_param.include?(":(")
    query = query_param.split(":(").first
  end
%>
<form class="search-form" role="search" method="post" action="/search">
  <div class="search-form__inputs viewport-container">
    <select aria-label="Select an option" class="search-form__inputs--select" autocomplete="off">
      <% search_options.each do |group| %>
        <% if optgroups %>
          <optgroup label="<%= group['group'] %>">
        <% end %>
        <% group['options'].each do |option| %>
          <% tips << { tip: option['tip'], value: option['value'] } %>
          <option value="<%= option['value'] %>" <%= query == option['value'] ? "selected" : nil %>>
            <%= option['text'] %>
          </option>
        <% end %>
        <% if optgroups %>
          </optgroup>
        <% end %>
      <% end %>
    </select>
    <input type="search" aria-label="Search for" class="search-form__inputs--text" autocomplete="on" name="query" value="">
    <button type="submit" class="search-form__inputs--submit button__primary">
      <span class="material-symbols-rounded" aria-hidden="true">search</span>
      <span class="visually-hidden">Search</span>
    </button>
    <a href="/<%= current_datastore %>/advanced" class="underline__none strong">Advanced</a>
  </div>
  <div class="search-form__tip viewport-container">
    <span class="material-symbols-rounded" aria-hidden="true">info</span>
    <% tips.each do |tip| %>
      <p class="search-form__tip--content" data-value="<%= tip[:value] %>">
        <span class="strong"><%= tip[:value].start_with?("browse_") ? "Browse" : "Search" %> Tip:</span> <%= tip[:tip] %>
      </p>
    <% end %>
  </div>
</form>
